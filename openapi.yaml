openapi: 3.1.0 #wishful thinking that our spec is 3.1 at the moment

info:
  title: Signable API  
  description: >
    The Signable API provides secure and efficient access to Signable's electronic
    signature platform. With this RESTful API, you can send documents for signature,
    manage templates, track envelope status, and automate your document workflows
    from within your own applications.

    For full documentation, visit https://developer.signable.co.uk/
  version: 1.0.0  
  contact:
    name: Signable
    email: help@signable.co.uk  
  termsOfService: https://www.signable.co.uk/terms-conditions/  
  license:
    name: Proprietary
    url: https://www.signable.co.uk/terms-conditions/
servers:
  - url: https://api.signable.co.uk/v1
    description: Production server
security:
  - basicAuth: []
x-tagsGroups:
  - name: Templates
    tags:
      - Templates
  - name: Contacts
    tags:
      - Contacts
  - name: Users
    tags:
      - Users
  - name: Branding
    tags:
      - Branding
  - name: Settings
    tags:
      - Settings
  - name: Webhooks
    tags:
      - Webhooks
      
webhooks:
  send-envelope:
    post:
      summary: Envelope sent
      description: >
        This webhook is triggered after an envelope has been successfully processed 
        and sent.
        It delivers information about the envelope, the recipient, any additional 
        metadata,
        and a download URL. Payload is sent as application/x-www-form-urlencoded.
      operationId: receiveSendEnvelopeWebhook
      tags:
        - Webhooks
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                envelope_fingerprint:
                  type: string
                  description: A string representing the envelope that was sent
                envelope_documents:
                  type: string
                  description: A JSON string representing the documents within the 
                    envelope
                envelope_download:
                  type: string
                  format: uri
                  description: A URL to download the envelope contents
                contact_id:
                  type: integer
                  description: The ID of the contact the envelope was sent to
                contact_name:
                  type: string
                  description: The name of the contact the envelope was sent to
                contact_email:
                  type: string
                  format: email
                  description: The email address of the contact the envelope was 
                    sent to
                action:
                  type: string
                  enum: [send-envelope]
                  default: send-envelope
                  description: The action taken. Defaults to `send-envelope`.
                action_date:
                  type: string
                  format: date-time
                  description: The UTC timestamp of when the action occurred
                envelope_meta:
                  type: string
                  description: A JSON string of any meta information added when 
                    sending the envelope
                envelope_signing_embed:
                  type: string
                  description: An iframe URL for embedded signing, if enabled
              required:
                - envelope_fingerprint
                - envelope_documents
                - envelope_download
                - contact_id
                - contact_name
                - contact_email
                - action
                - action_date
            example:
              envelope_fingerprint: "3945323c87601815b6673a62d9eb17d9"
              envelope_documents: '[{"document_title":"Untitled document","document_fingerprint":"5e8df3ca4ee32668b180326ed63bec81","document_pdf":"https://api.signableapi.com/shareable/document?t=2e4f1bbf-e786-42af-aae8-16b8j6ccb527","document_download":"https://api.signableapi.com/shareable/document?t=2e4f1bbf-e786-42af-aae8-16b8j6ccb527"}]'
              envelope_download: "https://api.signableapi.com/shareable/envelope?t=cf4dnn6dd-8400-4c29-83fb-befcb34c280a"
              envelope_signing_embed: '<iframe src="https://sign.signable.app/#2KnUUnVQTxtkpV8rmWqem9qXpvaTU2hYLHHyQD7WtdQ" width="100%" height="95%" frameborder="0" style="border: 0; overflow: hidden"></iframe>'
              contact_id: 14029945
              contact_name: "Andy Jackson"
              contact_email: "andy@wearedomo.com"
              action: "send-envelope"
              action_date: "2025-06-20T15:50:10+00:00"
              envelope_meta: ""  
      responses:
        '200':
          description: Acknowledge receipt

  # need to add all the other webhooks

paths:
  /templates:
    get:
      summary: List templates
      description: >
        Retrieves a paginated list of all templates available in your account.
      operationId: listTemplates
      tags:
        - Templates
      parameters:
        - $ref: '#/components/parameters/OffsetParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        "200":
          description: Templates list returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesListResponse'
              examples:
                default:
                  $ref: '#/components/examples/TemplatesListResponseExample'

  /templates/{template_fingerprint}:
    get:
      summary: Get template details
      description: Retrieves metadata and configuration for a single template.
      operationId: getTemplate
      tags: 
        - Templates
      parameters:
        - name: template_fingerprint
          in: path
          required: true
          description: The unique fingerprint of the template
          schema:
            type: string
            example: b786a173554cc06371248caf0b250704
      responses:
        "200":
          description: Template details returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGetResponse'
              examples:
                default:
                  $ref: '#/components/examples/TemplateGetResponseExample'

    delete:
      summary: Delete a template
      description: Deletes a template by its fingerprint.
      operationId: deleteTemplate
      tags:
        - Templates
      parameters:
        - name: template_fingerprint
          in: path
          required: true
          description: The unique fingerprint of the template to delete
          schema:
            type: string
            example: e0b3a9cbd4a6ff2cb57cfca161a39309
      responses:
        "200":
          description: Template deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateDeleteResponse'
              examples:
                default:
                  $ref: '#/components/examples/TemplateDeleteResponseExample'

  /contacts:
    get:
      summary: List contacts
      description: >
        Retrieves a paginated list of all contacts. Use `offset` and `limit` query parameters
        to control pagination.
      operationId: listContacts
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/OffsetParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        "200":
          description: Contact list returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsListResponse'
              examples:
                default:
                  $ref: '#/components/examples/ContactsListResponseExample'

    post:
      summary: Create a contact
      description: Adds a new contact to your contact list.
      operationId: createContact
      tags:
        - Contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCreateRequest'
            examples:
              default:
                $ref: '#/components/examples/ContactCreateRequestExample'
      responses:
        "200":
          description: Contact created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCreateResponse'
              examples:
                default:
                  $ref: '#/components/examples/ContactCreateResponseExample'

  /contacts/{contact_id}:
    get:
      summary: Get a contact
      description: Retrieves details of a single contact by `contact_id`.
      operationId: getContact
      tags:
        - Contacts
      parameters:
        - name: contact_id
          in: path
          required: true
          description: The unique ID of the contact
          schema:
            type: integer
            example: 17224150
      responses:
        "200":
          description: Contact details returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGetResponse'
              examples:
                default:
                  $ref: '#/components/examples/ContactGetResponseExample'

    put:
      summary: Update a contact
      description: Updates a contact's name or email address.
      operationId: updateContact
      tags:
        - Contacts
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: integer
            example: 17224150
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactUpdateRequest'
            examples:
              default:
                $ref: '#/components/examples/ContactUpdateRequestExample'
      responses:
        "200":
          description: Contact updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactUpdateResponse'
              examples:
                default:
                  $ref: '#/components/examples/ContactUpdateResponseExample'

    delete:
      summary: Delete a contact
      description: Deletes a contact by their `contact_id`.
      operationId: deleteContact
      tags: 
        - Contacts
      parameters:
        - name: contact_id
          in: path
          required: true
          schema:
            type: integer
            example: 17224150
      responses:
        "200":
          description: Contact deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDeleteResponse'
              examples:
                default:
                  $ref: '#/components/examples/ContactDeleteResponseExample'

  /contacts/{contact_id}/envelopes:
    get:
      summary: List envelopes for a contact
      description: >
        Returns a paginated list of all envelopes that the contact is a recipient of. 
        Each envelope includes basic metadata such as its current status, timestamps, and optional signed PDF link.
      operationId: listContactEnvelopes
      tags: 
        - Contacts
      parameters:
        - name: contact_id
          in: path
          required: true
          description: The unique ID of the contact
          schema:
            type: integer
            example: 17225983
        - $ref: '#/components/parameters/OffsetParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        "200":
          description: List of envelopes the contact is associated with
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactEnvelopesListResponse'
              examples:
                default:
                  $ref: '#/components/examples/ContactEnvelopesListResponseExample'

  /user:
    get:
      summary: List users
      description: >
        Retrieves a paginated list of all users in your account.
        You can control pagination using the `offset` and `limit` query parameters.
      operationId: listUsers
      tags:
        - Users
      parameters:
        - $ref: '#/components/parameters/OffsetParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        "200":
          description: Users list returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListResponse'
              examples:
                default:
                  $ref: '#/components/examples/UsersListResponseExample'

    post:
      summary: Create a user
      description: >
        Adds a new user to your account. You must provide the user’s name, email address, and their role ID.
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
            examples:
              default:
                $ref: '#/components/examples/UserCreateRequestExample'
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreateResponse'
              examples:
                default:
                  $ref: '#/components/examples/UserCreateResponseExample'

  /users/{user_id}:
    get:
      summary: Get a user
      description: >
        Retrieves the details of a single user by their unique `user_id`.
        The response includes the user's name, email, role, and timestamps.
      operationId: getUser
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          required: true
          description: The unique ID of the user to retrieve
          schema:
            type: integer
            example: 836499
      responses:
        "200":
          description: User details returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetResponse'
              examples:
                default:
                  $ref: '#/components/examples/UserGetResponseExample'

    put:
      summary: Update a user
      description: >
        Updates an existing user by their `user_id`. You can change their name, email address,
        or assigned role.
      operationId: updateUser
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          required: true
          description: The unique ID of the user to update
          schema:
            type: integer
            example: 837154
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
            examples:
              default:
                $ref: '#/components/examples/UserUpdateRequestExample'
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
              examples:
                default:
                  $ref: '#/components/examples/UserUpdateResponseExample'

    delete:
      summary: Delete a user
      description: >
        Removes a user from your account using their `user_id`.
        The response confirms the deletion and includes the user's basic details.
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          required: true
          description: The unique ID of the user to delete
          schema:
            type: integer
            example: 837154
      responses:
        "200":
          description: User deleted successfully

  /branding:
    get:
      summary: Get branding settings
      description: >
        Returns your company's current branding settings, including any uploaded 
        logo and primary colour.
        These settings control how Signable emails and signing pages appear to your 
        signers.
      operationId: getBranding
      tags:
        - Branding

      responses:
        "200":
          description: Branding settings returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingResponse'
              examples:
                default:
                  $ref: '#/components/examples/BrandingResponseExample'

    put:
      summary: Update branding settings
      description: >
        Update your account's branding settings. This includes the logo and the 
        primary colour used on emails and signing pages.
      operationId: updateBranding
      tags:
        - Branding
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandingPutRequest'
            examples:
                default:
                  $ref: '#/components/examples/BrandingPutRequestExample'
      responses:
        '200':
          description: Branding updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingPutResponse'
              examples:
                default:
                  $ref: '#/components/examples/BrandingPutResponseExample'

  /branding/emails:
    get:
      summary: List branding emails
      operationId: getBrandingEmails
      tags:
        - Branding
      responses:
        '200':
          description: A list of branding email templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingEmailsResponse'
              examples:
                success:
                  $ref: '#/components/examples/BrandingEmailsResponseExample'

  /branding/emails/{branding_email_type}:
    put:
      summary: Update a branding email
      description: >
        <Tip>You can include variables like `{company name}` and `{contract title}` 
        in your email body to personalise content. [See the full list of supported variables →](/email-variables.mdx)</Tip>
      operationId: updateBrandingEmail
      tags:
        - Branding
      parameters:
        - name: branding_email_type
          in: path
          required: true
          description: The type of branding email to update
          schema:
            type: string
            enum:
              - email-cancelled
              - email-rejected
              - email-reminder
              - email-reminder-password
              - email-send
              - email-send-password
              - email-signed
              - email-widget-verify
            example: email-cancelled
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandingEmailPutRequest'
            examples:
              updateSubject:
                $ref: '#/components/examples/BrandingEmailPutSubjectRequestExample'
              updateContent:
                $ref: '#/components/examples/BrandingEmailPutContentRequestExample'
              updatePlainContent:
                $ref: '#/components/examples/BrandingEmailPutPlainContentRequestExample'
      responses:
        '200':
          description: Branding email successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingEmailPutResponse'
              examples:
                updateSubject:
                  $ref: '#/components/examples/BrandingEmailPutSubjectResponseExample'
                updatedContent:
                  $ref: '#/components/examples/BrandingEmailPutContentResponseExample'
                updatedPlainContent:
                  $ref: '#/components/examples/BrandingEmailPutPlainContentResponseExample'

  /settings:
    get:
      summary: Get company settings
      description: >
        Your Signable account settings control how documents are delivered, signed, 
        and managed across your team.
        
        This section of the API lets you retrieve and update your company's signing 
        preferences, email notification 
        rules, signature formats, and more—giving you full control over how your 
        documents behave.
        
        Settings can be accessed via the API or in the Signable web app under 
        Company Settings > [Preferences](https://signable.app/company-settings/preferences).
        
      operationId: listSettings
      tags:
        - Settings

      responses:
        "200":
          description: Company settings returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsResponse'
              examples:
                default:
                  $ref: '#/components/examples/SettingsResponseExample'

    put:
      summary: Update company settings
      operationId: updateSettings
      tags:
        - Settings
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingsRequest'
            examples:
              default:
                $ref: '#/components/examples/SettingsPutRequestExample'

      responses:
        "200":
          description: Settings updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSettingsResponse'
              examples:
                updated:
                  $ref: '#/components/examples/SettingsPutResponseExample'      

  /webhooks:
    get:
      summary: List webhooks
      description: >
        Retrieves a paginated list of all webhooks currently registered to receive 
        event notifications.
        Supports offset and limit for pagination. Webhooks include metadata about 
        creation, update, and suspension state.
      operationId: listWebhooks
      tags:
        - Webhooks
      parameters:
        - name: offset
          in: query
          required: false
          description: Pagination offset
          schema:
            type: integer
            example: 0

        - name: limit
          in: query
          required: false
          description: Number of webhooks to return
          schema:
            type: integer
            example: 10

      responses:
        "200":
          description: Successfully returned a list of webhooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListResponse'
              examples:
                default:
                  $ref: '#/components/examples/WebhookListResponseExample'
                  
    post:
      summary: Create a webhook
      description: >
        Registers a new webhook that will be triggered when a specific event occurs.
        You must provide a valid `webhook_url` and a supported `webhook_type`. 
        The created webhook will immediately be eligible to receive matching 
        notifications.
      operationId: createWebhook
      tags:
        - Webhooks

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
            examples:
              default:
                $ref: '#/components/examples/WebhookRequestExample'

      responses:
        "200":   #should be a 201!
          description: Webhook successfully created
          headers:
            Location:
              description: The URL of the newly created webhook resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookPostResponse'
              examples:
                createdWebhook:
                  $ref: '#/components/examples/WebhookPostResponseExample'

  /webhooks/{webhook_id}:
    get:
      summary: Get a webhook
      description: >
        Retrieves details of a specific webhook by its unique `webhook_id`. 
        The response includes the current status and metadata of the webhook.
      operationId: getWebhook
      tags:
        - Webhooks

      parameters:
        - name: webhook_id
          in: path
          required: true
          description: The ID of the webhook to retrieve
          schema:
            type: integer
            example: 152691

      responses:
        "200":
          description: Webhook details returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookGetResponse'
              examples:
                default:
                  $ref: '#/components/examples/WebhookGetResponseExample'

    put:
      summary: Update a webhook
      description: >
        Updates the webhook identified by `webhook_id`. You may change 
        the`webhook_url` and/or the `webhook_type`.
      operationId: updateWebhook
      tags:
        - Webhooks

      parameters:
        - name: webhook_id
          in: path
          required: true
          description: The ID of the webhook to update
          schema:
            type: integer
            example: 152691

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
            examples:
              default:
                $ref: '#/components/examples/WebhookRequestExample'

      responses:
        "200":
          description: Webhook updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookPutResponse'
              examples:
                updated:
                  $ref: '#/components/examples/WebhookPutResponseExample'

    delete:
      summary: Delete a webhook
      description: >
        Deletes the webhook identified by `webhook_id`. Once removed, the webhook 
        will no longer receive event notifications.
      operationId: deleteWebhook
      tags:
        - Webhooks

      parameters:
        - name: webhook_id
          in: path
          required: true
          description: The ID of the webhook to delete
          schema:
            type: integer
            example: 152691

      responses:
        "200":
          description: Webhook successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDeleteResponse'
              examples:
                deleted:
                  $ref: '#/components/examples/WebhookDeleteResponseExample'

components:
  parameters:
      OffsetParam:
        name: offset
        in: query
        required: false
        description: Pagination offset (defaults to 0 if not provided)
        schema:
          type: integer
          example: 0
          default: 0

      LimitParam:
        name: limit
        in: query
        required: false
        description: Number of items to return (defaults to 10 if not provided)
        schema:
          type: integer
          example: 10
          default: 10

  schemas:
    MergeField:
      type: object
      properties:
        field_id:
          type: string
          description: Internal field identifier.
          example: "450927743"
        field_merge:
          type: string
          description: >
            A short label for the merge field, shown to the sender during the "Add fields & preview" 
            step when preparing an envelope for sending.
          example: Name of Sender
        field_type:
          type: string
          description: This will always be `text`, due to merge functionality only being available for text field type.
          example: text
          const: text

    TemplateParty:
      type: object
      properties:
        party_id:
          type: string
          example: "20459705"
        party_name:
          type: string
          example: Party
        party_merge_fields:
          type: array
          description: >
            Template fields that can optionally be pre-filled with text by the sender to personalise the document before sending.

            If a merge field is filled in during sending, it will appear as read-only for the signer.

            If left empty, the signer associated with the party ID in this object will be able to complete the field themselves.
          items:
            $ref: '#/components/schemas/MergeField'

    TemplateSummary:
      type: object
      properties:
        template_id:
          type: string
          description: Internal identifier.
          example: "53690003"
          
        template_fingerprint:
          type: string
          description: The unique ID used to identify this template.
          example: b786a173554cc06371248caf0b250704
          
        template_title:
          type: string
          description: The name of the template.
          example: Sample Contract
          
        template_page_total:
          type: string
          description: The total number of pages in the template.
          example: "1"
          
        template_in_progress:
          type: string
          description: The number of envelopes currently in progress that use this template.
          example: "3"
          
        template_parties_total:
          type: string
          description: The number of signing parties included in the template.
          example: "1"
          
        template_widget_url:
          type: string
          format: uri
          description: The direct URL to the hosted signing widget for this template.
          example: https://app.signable.co.uk/widget/url/KD7Tsd2y6X
          
        template_widget_embed:
          type: string
          description: A script snippet for embedding the signing widget into a webpage.
          example: <script type='text/javascript' src='https://app.signable.co.uk/widget/embed/KD7Tsd2y6X'></script>
          
        template_pdf_url:
          type: string
          format: uri
          description: A direct link to download the original uploaded PDF used in the template.
          example: https://docs.signable.co.uk/original/b786a173554cc06371248caf0b250704.pdf
          
        template_thumbnails:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs to thumbnail images for each page of the template.
          
        template_pages:
          type: array
          items:
            type: string
            format: uri
          description: An array of URLs to full-size images of each page in the template.
          
        template_uploaded:
          type: string
          format: date-time
          description: The date and time the template was uploaded (in ISO 8601 format).
          
        template_parties:
          type: array
          items:
            $ref: '#/components/schemas/TemplateParty'
          description: A list of the parties assigned to the template, including the merge fields linked to each party.

    TemplatesListResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        offset:
          type: integer
          example: 0
        limit:
          type: integer
          example: 10
        total_templates:
          type: string
          example: "1"
        templates:
          type: array
          items:
            $ref: '#/components/schemas/TemplateSummary'

    TemplateGetResponse:
      allOf:
        - type: object
          properties:
            http:
              type: integer
              example: 200
        - $ref: '#/components/schemas/TemplateSummary'

    TemplateDeleteResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        message:
          type: string
          example: Sample Tenancy Contract has been removed from your template list.
        template_id:
          type: string
          example: "53890528"
        tempate_fingerprint:
          type: string
          example: e0b3a9cbd4a6ff2cb57cfca161a39309
        tempate_title:
          type: string
          example: Sample Tenancy Contract

    Contact:
      type: object
      properties:
        contact_id:
          type: string
          example: "17224073"
        contact_name:
          type: string
          example: Buffy The Vampire Slayer
        contact_email:
          type: string
          format: email
          example: buffy@sunnydale.com
        contact_outstanding_documents:
          type: string
          example: "0"
        contact_created:
          type: string
          format: date-time
          example: "2025-07-07T09:54:08+0000"

    ContactsListResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        offset:
          type: integer
          example: 0
        limit:
          type: integer
          example: 50
        total_contacts:
          type: string
          example: "3"
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'

    ContactCreateRequest:
      type: object
      required:
        - contact_name
        - contact_email
      properties:
        contact_name:
          type: string
          example: Hanz Zimmer
        contact_email:
          type: string
          format: email
          example: hanz.zimmer@music.com

    ContactCreateResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        message:
          type: string
          example: Hanz Zimmer has been added to your contact list.
        href:
          type: string
          format: uri
          example: https://api.signable.co.uk/v1/contacts/17224150
        contact_id:
          type: string
          example: "17224150"
        contact_name:
          type: string
          example: Hanz Zimmer
        contact_email:
          type: string
          format: email
          example: hanz.zimmer@music.com
        contact_created:
          type: string
          format: date-time
          example: "2025-07-07T09:57:39+0000"

    ContactGetResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        contact_id:
          type: integer
          example: 17224150
        contact_name:
          type: string
          example: Hanz Zimmer
        contact_email:
          type: string
          format: email
          example: hanz.zimmer@music.com
        contact_outstanding_documents:
          type: string
          example: "0"
        contact_created:
          type: string
          format: date-time
          example: "2025-07-07T09:57:39+0000"

    ContactUpdateRequest:
      type: object
      required:
        - contact_name
        - contact_email
      properties:
        contact_name:
          type: string
          example: Nemo
        contact_email:
          type: string
          format: email
          example: nemo@coralreef.com

    ContactUpdateResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        message:
          type: string
          example: Nemo has been updated in your contact list.
        href:
          type: string
          format: uri
          example: https://api.signable.co.uk/v1/contacts/17224150
        contact_id:
          type: integer
          example: 17224150
        contact_name:
          type: string
          example: Nemo
        contact_email:
          type: string
          format: email
          example: nemo@coralreef.com
        contact_updated:
          type: string
          format: date-time
          example: "2025-07-07T09:59:25+0000"

    ContactDeleteResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        message:
          type: string
          example: Nemo has been removed from your contact list.
        contact_id:
          type: integer
          example: 17224150
        contact_name:
          type: string
          example: Nemo
        contact_email:
          type: string
          format: email
          example: nemo@coralreef.com

    EnvelopeSummary:
      type: object
      properties:
        envelope_fingerprint:
          type: string
          example: db9ab123d26e37ecdab6678c012d2207
        envelope_title:
          type: string
          example: Another Test
        envelope_status:
          type: string
          enum: [processing, sent, signed, cancelled, expired, failed, draft]
          description: >
            Status of the envelope:
            - `processing`: Initial state when creating without a template
            - `sent`: Envelope has been sent
            - `signed`: All parties have signed
            - `cancelled`: Cancelled by the sender
            - `expired`: Envelope expired before signing
            - `failed`: Processing failed
            - `draft`: Created but not sent
          example: draft
        envelope_created:
          type: string
          format: date-time
          example: "2025-07-07T11:30:27+0000"
        envelope_sent:
          type: string
          format: date-time
          nullable: true
          example: null
        envelope_processed:
          type: string
          format: date-time
          nullable: true
          example: null
        envelope_signed_pdf:
          type: string
          format: uri
          nullable: true
          example: https://api.signableapi.com/shareable/envelope?t=403cebcc-60ec-4cc2-b7d6-753fb7d5c662

    ContactEnvelopesListResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        offset:
          type: integer
          example: 0
        limit:
          type: integer
          example: 10
        total_envelopes:
          type: string
          example: "3"
        envelopes:
          type: array
          items:
            $ref: '#/components/schemas/EnvelopeSummary'

    UsersListResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        offset:
          type: integer
          example: 0
        limit:
          type: integer
          example: 50
        total_users:
          type: string
          description: Total number of users (returned as a string)
          example: "2"
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    
    User:
      type: object
      properties:
        user_id:
          type: string
          example: "836499"
        role_id:
          type: string
          example: "3"
        user_name:
          type: string
          example: "Andy Loves Signable"
        user_email:
          type: string
          format: email
          example: "andy+010725@wearedomo.com"
        user_added:
          type: string
          format: date-time
          example: "2025-07-01T08:40:38+0000"
        user_last_updated:
          type: string
          format: date-time
          example: "2025-07-07T07:57:54+0000"

    UserGetResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        user_id:
          type: integer
          example: 836499
        role_id:
          type: string
          enum: ["1", "2", "3"]
          description: |
            Role assigned to the user:
            - "1" = User
            - "2" = Admin
            - "3" = Super-Admin
          example: "3"
        user_name:
          type: string
          example: Andy Loves Signable
        user_email:
          type: string
          format: email
          example: andy+010725@wearedomo.com
        user_added:
          type: string
          format: date-time
          example: "2025-07-01T08:40:38+0000"
        user_last_updated:
          type: string
          format: date-time
          example: "2025-07-07T07:57:54+0000"

    UserCreateRequest:
      type: object
      required:
        - user_name
        - user_email
        - role_id
      properties:
        user_name:
          type: string
          example: Andy Example
        user_email:
          type: string
          format: email
          example: andy+example@wearedom.com
        role_id:
          type: string
          enum: ["1", "2", "3"]
          description: |
            Role assigned to the user:
            - "1" = User
            - "2" = Admin
            - "3" = Super-Admin
          example: 2

    UserCreateResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        message:
          type: string
          example: Andy Example has been added to your user list.
        href:
          type: string
          format: uri
          example: https://api.signable.co.uk/v1/users/837146
        user_id:
          type: string
          example: "837146"
        role_id:
          type: string
          enum: ["1", "2", "3"]
          description: |
            Role assigned to the user:
            - "1" = User
            - "2" = Admin
            - "3" = Super-Admin
        user_name:
          type: string
          example: Andy Example
        user_email:
          type: string
          format: email
          example: andy+example@wearedom.com
        user_added:
          type: string
          format: date-time
          example: "2025-07-07T08:06:49+0000"

    UserUpdateRequest:
      type: object
      required:
        - user_name
        - user_email
        - role_id
      properties:
        user_name:
          type: string
          example: Andy Jackson
        user_email:
          type: string
          format: email
          example: andy+jackson@wearedomo.com
        role_id:
          type: string
          enum: ["1", "2", "3"]
          description: |
            Role assigned to the user:
            - "1" = User
            - "2" = Admin
            - "3" = Super-Admin
          example: "1"

    UserUpdateResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        message:
          type: string
          example: Andy Jackson has been updated in your user list.
        href:
          type: string
          format: uri
          example: https://api.signable.co.uk/v1/users/837154
        user_id:
          type: integer
          example: 837154
        role_id:
          type: string
          enum: ["1", "2", "3"]
          example: "1"
        user_name:
          type: string
          example: Andy Jackson
        user_email:
          type: string
          format: email
          example: andy+jackson@wearedomo.com
        user_updated:
          type: string
          format: date-time
          example: "2025-07-07T08:38:54+0000"

    UserDeleteResponse:
      type: object
      properties:
        http:
          type: integer
          example: 200
        message:
          type: string
          example: Andy Jackson has been removed from your user list.
        user_id:
          type: integer
          example: 837154
        role_id:
          type: string
          enum: ["1", "2", "3"]
          description: |
            Role previously assigned to the deleted user:
            - "1" = User
            - "2" = Admin
            - "3" = Super-Admin
          example: "1"
        user_email:
          type: string
          format: email
          example: andy+jackson@wearedomo.com
        user_name:
          type: string
          example: Andy Jackson

    BrandingResponse:
      type: object
      required:
        - http
        - branding_logo
        - branding_colour
      properties:
        http:
          type: integer
          description: HTTP status code
          example: 200

        branding_logo:
          type: [string, "null"]
          format: uri
          description: >
            A public URL to your uploaded logo (shown on emails and signing pages).
            Returns `null` if no logo is uploaded.
          example: https://www.signable.co.uk/signable.png

        branding_colour:
          type: string
          description: >
            The primary hex colour used for branding emails and signing pages.
          example: "#0095E6"

    BrandingPutRequest:
      type: object
      properties:
        branding_logo_url:
          type: [string, "null"]
          format: uri
          description: >
            A public URL to your logo. This will be shown on emails and the signing 
            page.
            Set to `null` to remove the current logo.
          example: https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png

        branding_colour:
          type: string
          pattern: '^#[0-9A-Fa-f]{6}$'
          description: >
            The hex colour code (e.g. `#0095E6`) used for branded emails and signing 
            pages.
          example: "#558caa"
      required:
        - branding_logo_url
        - branding_colour

    BrandingPutResponse:
      type: object
      required:
        - http
        - message
        - branding_logo
        - branding_colour
      properties:
        http:
          type: integer
          description: HTTP status code
          example: 200

        message:
          type: string
          description: A success message confirming the update
          example: Branding options have been updated.

        branding_logo:
          type: [string, "null"]
          format: uri
          description: >
            The final logo URL now active for your account. Will be `null` if none
            is set.
          example: https://assets.signable.co.uk/company-logo/213690-1751360856.png

        branding_colour:
          type: string
          description: >
            The hex code now being used for branding emails and signing pages. Will
            be `null` if none is set.
          example: "#558CAA"

    BrandingEmailsResponse:
      type: object
      required:
        - http
        - branding_emails
      properties:
        http:
          type: integer
          example: 200
        branding_emails:
          type: array
          items:
            $ref: '#/components/schemas/BrandingEmail'

    BrandingEmail:
      type: object
      required:
        - branding_email_type
        - branding_email_subject
        - branding_email_content
        - branding_email_content_plain
        - branding_email_updated
      properties:
        branding_email_type:
          type: string
          description: Type of the branding email template
          enum:
            - email-cancelled
            - email-rejected
            - email-reminder
            - email-reminder-password
            - email-send
            - email-send-password
            - email-signed
            - email-widget-verify
          example: email-cancelled
        branding_email_subject:
          type: string
          description: Subject line with variables
          example: "{company name} has cancelled a document"
        branding_email_content:
          type: string
          description: HTML version of the email template
          example: "<body style=...>...</body>"
        branding_email_content_plain:
          type: string
          description: Plain text version of the email
          example: "{company name} has cancelled the {contract title} document."
        branding_email_updated:
          type: string
          format: date-time
          description: Last updated timestamp (ISO 8601)
          example: "2025-07-01T08:40:38+0000"

    BrandingEmailPutRequest:
      type: object
      description: One-property-only request to update a single branding email attribute.
      properties:
        branding_email_subject:
          type: string
          description: The subject line for the email
          example: "{company name} has cancelled a test document"
        branding_email_content:
          type: string
          description: The HTML content of the email
          example: "<body style='font-family:Arial;'>...</body>"
        branding_email_content_plain:
          type: string
          description: The plain text content of the email
          example: "Your document from {company name} has been cancelled."
      additionalProperties: false
      oneOf:
        - required: [branding_email_subject]
        - required: [branding_email_content]
        - required: [branding_email_content_plain]

    BrandingEmailPutResponse:
      type: object
      required:
        - http
        - message
        - branding_email_type
        - branding_email_subject
        - branding_email_content
        - branding_email_content_plain
        - branding_email_updated
      properties:
        http:
          type: integer
          example: 200
        message:
          type: string
          example: email-cancelled email has been updated.
        branding_email_type:
          type: string
          enum:
            - email-cancelled
            - email-rejected
            - email-reminder
            - email-reminder-password
            - email-send
            - email-send-password
            - email-signed
            - email-widget-verify
        branding_email_subject:
          type: string
          example: "{company name} has cancelled a test document"
        branding_email_content:
          type: string
          description: HTML version of the updated email
        branding_email_content_plain:
          type: string
          description: Plain text version of the updated email
        branding_email_updated:
          type: string
          format: date-time
          example: "2025-07-02T11:44:32+0000"

    SettingsFields:
      type: object
      description: Common company settings shared across settings GET and PUT 
        operations.
      properties:
        setting_signature_more_info:
          type: boolean
          description: >
            If enabled, the signature will display the signer name and timestamp 
            under each signature block on the generated Envelope PDF.
          example: true

        setting_signature_format_default:
          type: string
          description: >
            Which signature format is offered by default. Accepted values: `drawn`, 
            `typed`, or `upload`.
          example: typed

        setting_signature_format_accepted:
          type: string
          description: >
            Comma-separated list of signature formats your account accepts. Valid 
            values: `drawn`, `typed`, `upload`.
          example: typed,drawn,upload

        setting_email_pdf_attach:
          type: boolean
          description: >
            If enabled, the document to be signed will be attached as a PDF in 
            emails. 
            If disabled, no PDF will be attached. Recipients can still view the 
            document via a link in the email.
          example: true

        setting_email_envelope_open:
          type: boolean
          description: >
            If enabled, an email notification will be sent when someone opens the 
            envelope.
          example: true

        setting_email_main_email:
          type: boolean
          description: >
            If enabled, notifications (signed, rejected, cancelled) are sent to your 
            company’s main email address.
          example: true

        setting_email_return_address_user:
          type: boolean
          description: >
            If enabled, the "Return Email" will be set to the user who sent the 
            envelope, rather than the main company email.
            If disabled, the "Return Email" will be set to your main company email 
            address.
            Regardless of this property, emails will always be sent from 
            document@signable.co.uk.
          example: true

        setting_signing_consumer_regulations_act:
          type: boolean
          description: >
            Enables [Consumer Contract Regulations 2013 compliance](http://www.legislation.gov.uk/uksi/2013/3134/pdfs/uksi_20133134_en.pdf) 
            for your account. Only set this to 'Yes' if you believe that you need 
            this enabled. 
            This setting will change some of the terminology on the signing page to 
            become compliant with this Act.
          example: false

        setting_signing_tooltips:
          type: boolean
          deprecated: true
          description: >
            If enabled, tooltip hints will be shown when a signer attempts to sign a
            document.
          example: false

        setting_signing_questions:
          type: boolean
          description: >
            If enabled, signers can send you questions or comments directly from the
            signing page.
          example: true

        setting_pdf_audit_trail_hide:
          type: boolean
          description: >
            If enabled, all party email addresses and mobile numbers will be hidden 
            on the signing page and PDF certificate audit trail.
          example: true

        setting_all_at_once_default:
          type: boolean
          description: >
            If enabled, envelopes are sent to all parties simultaneously by default 
            (all-at-once signing).
            If disabled, envelopes are sent to the first party only (one-at-a-time 
            signing).
            Default is `true`.
          example: true

    SettingsResponse:
      allOf:
        - type: object
          properties:
            http:
              type: integer
              example: 200
        - $ref: '#/components/schemas/SettingsFields'

    UpdateSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/SettingsFields'

    UpdateSettingsResponse:
      allOf:
        - type: object
          properties:
            http:
              type: integer
              example: 200
            message:
              type: string
              example: Signable Ltd settings have been updated.
            href:
              type: string
              format: uri
              example: https://api.signable.co.uk/v1/companies/32275
            company_id:
              type: string
              example: "32275"
            company_name:
              type: string
              example: Signable Ltd
        - $ref: '#/components/schemas/SettingsFields'

    WebhookRequest:
      type: object
      required:
        - webhook_url
        - webhook_type
      properties:
        webhook_url:
          type: string
          format: uri
          description: The callback URL where webhook events will be sent.
          example: https://example.com
        webhook_type:
          type: string
          description: >
            The event type to subscribe to. Valid values include:
            `send-envelope`, `signed-envelope`, `cancelled-envelope`, 
            `rejected-envelope`, `bounced-envelope`, `add-user`, `add-contact`, 
            `opened-envelope`, `add-template`, `all`, 
            `signed-envelope-complete`, `verify-envelope-widget`, 
            `signed-envelope-widget`, and `send-envelope-failed`.
          enum:
            - send-envelope
            - signed-envelope
            - cancelled-envelope
            - rejected-envelope
            - bounced-envelope
            - add-user
            - add-contact
            - opened-envelope
            - add-template
            - all
            - signed-envelope-complete
            - verify-envelope-widget
            - signed-envelope-widget
            - send-envelope-failed
          example: send-envelope

    WebhookPostResponse:
      type: object
      required:
        - http
        - message
        - href
        - webhook_id
        - webhook_url
        - webhook_type
        - webhook_created
      properties:
        http:
          type: integer
          description: HTTP status code
          example: 200
        message:
          type: string
          description: Confirmation message about the webhook creation
          example: The webhook (https://example.com) has been created
        href:
          type: string
          format: uri
          description: API resource URL for the newly created webhook
          example: https://api.signable.co.uk/v1/webhooks/152691
        webhook_id:
          type: string
          description: Unique identifier for the created webhook
          example: "152691"
        webhook_url:
          type: string
          format: uri
          description: The callback URL registered for the webhook
          example: https://example.com
        webhook_type:
          type: string
          description: The event type the webhook is subscribed to
          enum:
            - send-envelope
            - signed-envelope
            - cancelled-envelope
            - rejected-envelope
            - bounced-envelope
            - add-user
            - add-contact
            - opened-envelope
            - add-template
            - all
            - signed-envelope-complete
            - verify-envelope-widget
            - signed-envelope-widget
            - send-envelope-failed
          example: all
        webhook_created:
          type: string
          format: date-time
          description: The timestamp when the webhook was created
          example: 2025-06-23T17:15:01+0000
    
    WebhookPutResponse:
      type: object
      required:
        - http
        - message
        - href
        - webhook_id
        - webhook_url
        - webhook_type
        - webhook_updated
      properties:
        http:
          type: integer
          example: 200

        message:
          type: string
          example: The webhook with ID 152691 has been updated

        href:
          type: string
          format: uri
          example: https://api.signable.co.uk/v1/webhooks/152691

        webhook_id:
          type: integer
          example: 152691

        webhook_url:
          type: string
          format: uri
          example: https://andy-example.com

        webhook_type:
          type: string
          enum:
            - send-envelope
            - signed-envelope
            - cancelled-envelope
            - rejected-envelope
            - bounced-envelope
            - add-user
            - add-contact
            - opened-envelope
            - add-template
            - all
            - signed-envelope-complete
            - verify-envelope-widget
            - signed-envelope-widget
            - send-envelope-failed
          example: all

        webhook_updated:
          type: string
          format: date-time
          example: 2025-06-24T09:32:55+0000

    WebhookGetResponse:
      type: object
      required:
        - http
        - webhook_id
        - webhook_url
        - webhook_type
        - webhook_created
        - webhook_updated
        - webhook_suspended
      properties:
        http:
          type: integer
          description: HTTP status code
          example: 200
        webhook_id:
          type: integer
          description: Unique identifier of the webhook
          example: 152691
        webhook_url:
          type: string
          format: uri
          description: The URL to which webhook events are sent
          example: https://example.com
        webhook_type:
          type: string
          description: Type of event the webhook listens for
          enum:
            - send-envelope
            - signed-envelope
            - cancelled-envelope
            - rejected-envelope
            - bounced-envelope
            - add-user
            - add-contact
            - opened-envelope
            - add-template
            - all
            - signed-envelope-complete
            - verify-envelope-widget
            - signed-envelope-widget
            - send-envelope-failed
          example: all
        webhook_created:
          type: string
          format: date-time
          description: Timestamp when the webhook was created
          example: 2025-06-23T17:15:01+0000
        webhook_updated:
          anyOf:
            - type: string
              format: date-time
            - type: "null"
          description: Timestamp when the webhook was last updated
          example: null
        webhook_suspended:
          anyOf:
            - type: boolean
            - type: "null"
          description: Whether the webhook is currently suspended
          example: null

    WebhookListItem:
      type: object
      required:
        - webhook_id
        - webhook_url
        - webhook_type
        - webhook_created
        - webhook_updated
        - webhook_suspended
      properties:
        webhook_id:
          type: string
          description: Unique identifier of the webhook
          example: "132223"

        webhook_url:
          type: string
          format: uri
          description: The URL to which webhook events are sent
          example: https://example.com

        webhook_type:
          type: string
          description: The type of event the webhook listens for
          enum:
            - send-envelope
            - signed-envelope
            - cancelled-envelope
            - rejected-envelope
            - bounced-envelope
            - add-user
            - add-contact
            - opened-envelope
            - add-template
            - all
            - signed-envelope-complete
            - verify-envelope-widget
            - signed-envelope-widget
            - send-envelope-failed
          example: send-envelope

        webhook_created:
          type: string
          format: date-time
          description: Timestamp when the webhook was created
          example: 2025-06-23T17:15:01+0000

        webhook_updated:
          anyOf:
            - type: string
              format: date-time
            - type: "null"
          description: When the webhook was last updated
          example: null

        webhook_suspended:
          anyOf:
            - type: string
              format: date-time
            - type: "null"
          description: When the webhook was suspended (or null if active)
          example: null

    WebhookListResponse:
      type: object
      required:
        - http
        - offset
        - limit
        - total_webhooks
        - webhooks
      properties:
        http:
          type: integer
          example: 200
        offset:
          type: integer
          example: 10
        limit:
          type: integer
          example: 10
        total_webhooks:
          type: string
          example: "44"
        next:
          type: string
          format: uri
          example: https://api.signable.co.uk/v1/webhooks?offset=10&limit=10
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/WebhookListItem'

    WebhookDeleteResponse:
      type: object
      required:
        - http
        - message
        - webhook_id
        - webhook_url
        - webhook_type
      properties:
        http:
          type: integer
          description: HTTP status code
          example: 200

        message:
          type: string
          description: Descriptive message confirming the webhook was removed
          example: The webhook (https://andy-example.com) has been removed from your 
            account.

        webhook_id:
          type: integer
          description: Unique identifier of the deleted webhook
          example: 152691

        webhook_url:
          type: string
          format: uri
          description: The URL of the deleted webhook
          example: https://andy-example.com

        webhook_type:
          type: string
          description: Type of event the deleted webhook was subscribed to
          enum:
            - send-envelope
            - signed-envelope
            - cancelled-envelope
            - rejected-envelope
            - bounced-envelope
            - add-user
            - add-contact
            - opened-envelope
            - add-template
            - all
            - signed-envelope-complete
            - verify-envelope-widget
            - signed-envelope-widget
            - send-envelope-failed
          example: all

  examples:
    TemplatesListResponseExample:
      summary: Example template list response
      value:
        http: 200
        offset: 0
        limit: 10
        total_templates: "2"
        templates:
          - template_id: "53890528"
            template_fingerprint: e0b3a9cbd4a6ff2cb57cfca161a38309
            template_title: Sample Tenancy Contract
            template_page_total: "2"
            template_in_progress: "0"
            template_parties_total: "1"
            template_widget_url: https://app.signable.co.uk/widget/url/YzVsBQ5Dyj
            template_widget_embed: <script type='text/javascript' src='https://app.signable.co.uk/widget/embed/YzVsBQ5Dyj'></script>
            template_pdf_url: https://docs.signable.co.uk/original/e0b3a9cbd4a6ff2cb57cfca161a38309.pdf
            template_thumbnails:
              - https://docs.signable.co.uk/small/e0b3a9cbd4a6ff2cb57cfca161a38309-0.jpg
              - https://docs.signable.co.uk/small/e0b3a9cbd4a6ff2cb57cfca161a38309-1.jpg
            template_pages:
              - https://docs.signable.co.uk/large/e0b3a9cbd4a6ff2cb57cfca161a38309-0.jpg
              - https://docs.signable.co.uk/large/e0b3a9cbd4a6ff2cb57cfca161a38309-1.jpg
            template_uploaded: "2025-07-07T15:49:43+0000"
            template_parties:
              - party_id: "20576938"
                party_name: Signer 1
          - template_id: "53690003"
            template_fingerprint: b786a173554cc06371248caf0b250704
            template_title: Sample Contract
            template_page_total: "1"
            template_in_progress: "3"
            template_parties_total: "1"
            template_widget_url: https://app.signable.co.uk/widget/url/
            template_widget_embed: <script type='text/javascript' src='https://app.signable.co.uk/widget/embed/'></script>
            template_pdf_url: https://docs.signable.co.uk/original/b786a173554cc06371248caf0b250704.pdf
            template_thumbnails:
              - https://docs.signable.co.uk/small/b786a173554cc06371248caf0b250704-0.jpg
            template_pages:
              - https://docs.signable.co.uk/large/b786a173554cc06371248caf0b250704-0.jpg
            template_uploaded: "2025-07-01T08:40:38+0000"
            template_parties:
              - party_id: "20459705"
                party_name: Party
                party_merge_fields:
                  - field_id: "450927743"
                    field_merge: Name of Sender
                    field_type: text

    TemplateGetResponseExample:
      summary: Example template details response
      value:
        http: 200
        template_id: "53690003"
        template_fingerprint: b786a173554cc06371248caf0b250704
        template_title: Sample Contract
        template_page_total: "1"
        template_in_progress: "3"
        template_parties_total: "1"
        template_widget_url: https://app.signable.co.uk/widget/url/YzVsBQ5Dyj
        template_widget_embed: <script type='text/javascript' src='https://app.signable.co.uk/widget/embed/YzVsBQ5Dyj'></script>
        template_pdf_url: https://docs.signable.co.uk/original/b786a173554cc06371248caf0b250704.pdf
        template_thumbnails:
          - https://docs.signable.co.uk/small/b786a173554cc06371248caf0b250704-0.jpg
        template_pages:
          - https://docs.signable.co.uk/large/b786a173554cc06371248caf0b250704-0.jpg
        template_uploaded: "2025-07-01T08:40:38+0000"
        template_parties:
          - party_id: "20459705"
            party_name: Party
            party_merge_fields:
              - field_id: "450927743"
                field_merge: Name of Sender
                field_type: text

    TemplateDeleteResponseExample:
      summary: Example template deletion confirmation
      value:
        http: 200
        message: Sample Tenancy Contract has been removed from your template list.
        template_id: "53890528"
        tempate_fingerprint: e0b3a9cbd4a6ff2cb57cfca161a38309     
        tempate_title: Sample Tenancy Contract

    ContactsListResponseExample:
      summary: Paginated list of contacts
      value:
        http: 200
        offset: 0
        limit: 50
        total_contacts: "3"
        contacts:
          - contact_id: "17224073"
            contact_name: Buffy The Vampire Slayer
            contact_email: buffy@sunnydale.com
            contact_outstanding_documents: "0"
            contact_created: "2025-07-07T09:54:08+0000"
          - contact_id: "17224050"
            contact_name: Jane Doe
            contact_email: jane@example.com
            contact_outstanding_documents: "0"
            contact_created: "2025-07-07T09:52:54+0000"
          - contact_id: "17224044"
            contact_name: Jo Bloggs
            contact_email: jo@example.com
            contact_outstanding_documents: "0"
            contact_created: "2025-07-07T09:52:32+0000"

    ContactCreateRequestExample:
      summary: Example create contact request
      value:
        contact_name: Hanz Zimmer
        contact_email: hanz.zimmer@music.com

    ContactCreateResponseExample:
      summary: Example create contact response
      value:
        http: 200
        message: Hanz Zimmer has been added to your contact list.
        href: https://api.signable.co.uk/v1/contacts/17224150
        contact_id: "17224150"
        contact_name: Hanz Zimmer
        contact_email: hanz.zimmer@music.com
        contact_created: "2025-07-07T09:57:39+0000"

    ContactGetResponseExample:
      summary: Example get contact response
      value:
        http: 200
        contact_id: 17224150
        contact_name: Hanz Zimmer
        contact_email: hanz.zimmer@music.com
        contact_outstanding_documents: "0"
        contact_created: "2025-07-07T09:57:39+0000"

    ContactUpdateRequestExample:
      summary: Example update contact request
      value:
        contact_name: Nemo
        contact_email: nemo@coralreef.com

    ContactUpdateResponseExample:
      summary: Example update contact response
      value:
        http: 200
        message: Nemo has been updated in your contact list.
        href: https://api.signable.co.uk/v1/contacts/17224150
        contact_id: 17224150
        contact_name: Nemo
        contact_email: nemo@coralreef.com
        contact_updated: "2025-07-07T09:59:25+0000"

    ContactDeleteResponseExample:
      summary: Example delete contact response
      value:
        http: 200
        message: Nemo has been removed from your contact list.
        contact_id: 17224150
        contact_name: Nemo
        contact_email: nemo@coralreef.com

    ContactEnvelopesListResponseExample:
      summary: Envelopes associated with a contact
      value:
        http: 200
        offset: 0
        limit: 10
        total_envelopes: "3"
        envelopes:
          - envelope_fingerprint: db9ab123d26e37ecdab6678c012d2207
            envelope_title: Another Test
            envelope_status: draft
            envelope_created: "2025-07-07T11:30:27+0000"
            envelope_sent: null
            envelope_processed: null
          - envelope_fingerprint: 082fb78846cc7cd7afe3688ced12438d
            envelope_title: 2nd Test
            envelope_status: signed
            envelope_created: "2025-07-07T11:27:44+0000"
            envelope_sent: "2025-07-07T11:29:31+0000"
            envelope_processed: "2025-07-07T11:30:09+0000"
            envelope_signed_pdf: https://api.signableapi.com/shareable/envelope?t=403cebcc-60ec-4cc2-b7d6-753fb7d5c632
          - envelope_fingerprint: d02114531327fa2aa1c03ad6670790b9
            envelope_title: Test Envelope
            envelope_status: signed
            envelope_created: "2025-07-07T10:30:02+0000"
            envelope_sent: "2025-07-07T11:26:20+0000"
            envelope_processed: "2025-07-07T11:27:20+0000"
            envelope_signed_pdf: https://api.signableapi.com/shareable/envelope?t=3dd2069d-4a61-4c9e-99c8-9dfc737eb150

    UsersListResponseExample:
      summary: Paginated user list
      value:
        http: 200
        offset: 0
        limit: 50
        total_users: "2"
        users:
          - user_id: "836499"
            role_id: "3"
            user_name: "Andy Loves Signable"
            user_email: "andy+010725@wearedomo.com"
            user_added: "2025-07-01T08:40:38+0000"
            user_last_updated: "2025-07-07T07:57:54+0000"
          - user_id: "837142"
            role_id: "1"
            user_name: "Sandy"
            user_email: "andy+sandy@wearedomo.com"
            user_added: "2025-07-07T07:58:38+0000"
            user_last_updated: "2025-07-07T07:58:44+0000"

    UserGetResponseExample:
        summary: Single user response
        value:
          http: 200
          user_id: 836499
          role_id: "3"
          user_name: Andy Loves Signable
          user_email: andy+010725@wearedomo.com
          user_added: "2025-07-01T08:40:38+0000"
          user_last_updated: "2025-07-07T07:57:54+0000"

    UserCreateRequestExample:
      summary: Example user creation request
      value:
        user_name: Andy Example
        user_email: andy+example@wearedom.com
        role_id: "2"

    UserCreateResponseExample:
      summary: Example successful user creation response
      value:
        http: 200
        message: Andy Example has been added to your user list.
        href: https://api.signable.co.uk/v1/users/837146
        user_id: "837146"
        role_id: "2"
        user_name: Andy Example
        user_email: andy+example@wearedom.com
        user_added: "2025-07-07T08:06:49+0000"

    UserUpdateRequestExample:
      summary: Update user details
      value:
        user_name: Andy Jackson
        user_email: andy+jackson@wearedomo.com
        role_id: "1"

    UserUpdateResponseExample:
      summary: Successful user update
      value:
        http: 200
        message: Andy Jackson has been updated in your user list.
        href: https://api.signable.co.uk/v1/users/837154
        user_id: 837154
        role_id: "1"
        user_name: Andy Jackson
        user_email: andy+jackson@wearedomo.com
        user_updated: "2025-07-07T08:38:54+0000"

    UserDeleteResponseExample:
      summary: User deletion confirmation
      value:
        http: 200
        message: Andy Jackson has been removed from your user list.
        user_id: 837154
        role_id: "1"
        user_email: andy+jackson@wearedomo.com
        user_name: Andy Jackson

    BrandingResponseExample:
      summary: Example branding configuration
      value:
        http: 200
        branding_logo: https://www.signable.co.uk/signable.png
        branding_colour: "#0095E6"

    BrandingPutRequestExample:
      summary: Example branding update request
      value:
        branding_logo_url: https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png
        branding_colour: "#558caa"

    BrandingPutResponseExample:
      summary: Branding successfully updated
      value:
        http: 200
        message: Branding options have been updated.
        branding_logo: https://assets.signable.co.uk/company-logo/213690-1751360856.png
        branding_colour: "#558CAA"

    BrandingEmailPutSubjectRequestExample:
      summary: Update subject line only
      value:
        branding_email_subject: "{company name} has cancelled a test document"

    BrandingEmailPutContentRequestExample:
      summary: Update HTML content only
      value:
        branding_email_content: |
          <body style="font-family:Arial,Helvetica,serif;">
          <table style="background:#FFF;font-family:Arial,Helvetica,sans-serif;border-collpase:collapse;width:600px;margin:0 auto;">
              <tr>
                  <td>
                      <table style="border-collpase:collapse">
                          <tr>
                              <td style="padding:15px 10px 10px">
                                  <a href="https://www.signable.co.uk" style="font-size:25px;color:#FFF;letter-spacing:-1px;font-weight:normal">
                                      <img src="{company logo}" alt="{company name}" style="border:0;" />
                                  </a>
                              </td>
                          </tr>
                          <tr>
                              <td style="padding-top:10px">
                                  <h1 style="font-size:15px;font-weight:normal;color:#444">A document previously sent to you has been cancelled</h1>
                                  <p style="font-size:13px;color:#444;line-height:18px;padding-top:10px">
                                    <span style="font-weight:bold;">{company name}</span> has cancelled the <span style="font-weight:bold;">{contract title}</span> document.
                                  </p>
                                  <p style="font-size:15px;color:#555;margin-top:30px">
                                    Kind regards, <a href="https://www.signable.co.uk" style="color:#555;">Signable</a>
                                  </p>
                                  <hr style="background:#FFF;color:#FFF;border:none;height:0;border-bottom:1px dotted #CCC;" />
                              </td>
                          </tr>
                      </table>
                  </td>
              </tr>
          </table>
          </body>

    BrandingEmailPutPlainContentRequestExample:
      summary: Update plain content only
      value:
        branding_email_content: "A test document previously sent to you has been cancelled\r\n\r\n{company name} has cancelled the {contract title} document.\r\n\r\nKind regards,\r\nSignable\r\n\r\nhttps://www.signable.co.uk"

    BrandingEmailsResponseExample:
      summary: Example branding emails response
      value:
        http: 200
        branding_emails:
          - branding_email_type: email-cancelled
            branding_email_subject: "{company name} has cancelled a document"
            branding_email_content: |
              <body style="font-family:Arial,Helvetica,sans-serif;">
              <table style="background:#FFF;font-family:Arial,Helvetica,sans-serif;border-collpase:collapse;width:600px;margin:0 auto;">
                <tr>
                  <td>
                    <table style="border-collpase:collapse">
                      <tr>
                        <td style="padding:15px 10px 10px">
                          <a href="https://www.signable.co.uk">
                            <img src="{company logo}" alt="{company name}" />
                          </a>
                        </td>
                      </tr>
                      <tr>
                        <td style="padding-top:10px">
                          <h1 style="font-size:15px;">A document previously sent to you has been cancelled</h1>
                          <p><strong>{company name}</strong> has cancelled the <strong>{contract title}</strong> document.</p>
                          <p>Kind regards, <a href="https://www.signable.co.uk">Signable</a></p>
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
              </body>
            branding_email_content_plain: |
              A document previously sent to you has been cancelled

              {company name} has cancelled the {contract title} document.

              Kind regards,
              Signable

              https://www.signable.co.uk
            branding_email_updated: "2025-07-01T08:40:38+0000"

          - branding_email_type: email-rejected
            branding_email_subject: "{contract title} document rejected"
            branding_email_content: "<html>...</html>"
            branding_email_content_plain: "A document you signed has been rejected..."
            branding_email_updated: "2025-07-01T08:40:38+0000"

          - branding_email_type: email-reminder
            branding_email_subject: "{company name} has sent you a document to sign"
            branding_email_content: "<body>...</body>"
            branding_email_content_plain: "{company name} has sent you the document {contract title} to sign online..."
            branding_email_updated: "2025-07-01T08:40:38+0000"

          - branding_email_type: email-reminder-password
            branding_email_subject: "{company name} has sent you a document to sign"
            branding_email_content: "<body>...</body>"
            branding_email_content_plain: "{company name} has also requested this document be password protected..."
            branding_email_updated: "2025-07-01T08:40:38+0000"

          - branding_email_type: email-send
            branding_email_subject: "{company name} has sent you a document to sign"
            branding_email_content: "<body>...</body>"
            branding_email_content_plain: "{client name}, you have been sent a document to sign..."
            branding_email_updated: "2025-07-01T08:40:38+0000"

          - branding_email_type: email-send-password
            branding_email_subject: "{company name} has sent you a document to sign"
            branding_email_content: "<body>...</body>"
            branding_email_content_plain: "{client name}, you've been sent a secure document..."
            branding_email_updated: "2025-07-01T08:40:38+0000"

          - branding_email_type: email-signed
            branding_email_subject: "Document signed confirmation"
            branding_email_content: "<body>...</body>"
            branding_email_content_plain: "You have successfully signed {contract title}..."
            branding_email_updated: "2025-07-01T08:40:38+0000"

          - branding_email_type: email-widget-verify
            branding_email_subject: "Verify your signed document with {company name}"
            branding_email_content: "<body>...</body>"
            branding_email_content_plain: "Please verify your email address to complete signing of {contract title}..."
            branding_email_updated: "2025-07-01T08:40:38+0000"

    BrandingEmailPutSubjectResponseExample:
      summary: Updated branding email response
      value:
        http: 200
        message: "email-cancelled email has been updated."
        branding_email_type: email-cancelled
        branding_email_subject: "{company name} has cancelled a test document"
        branding_email_content: |
          <body style="font-family:Arial,Helvetica,sans-serif;">
          <table style="background:#FFF;font-family:Arial,Helvetica,sans-serif;border-collpase:collapse;width:600px;margin:0 auto;">
              <tr>
                  <td>
                    <table style="border-collpase:collapse">
                        <tr>
                            <td style="padding:15px 10px 10px">
                                <a href="https://www.signable.co.uk">
                                    <img src="{company logo}" alt="{company name}" />
                                </a>
                            </td>
                        </tr>
                        <tr>
                            <td style="padding-top:10px">
                                <h1 style="font-size:15px;color:#444;">A document previously sent to you has been cancelled</h1>
                                <p style="font-size:13px;color:#444;line-height:18px;padding-top:10px">
                                    <strong>{company name}</strong> has cancelled the <strong>{contract title}</strong> document.
                                </p>
                                <p style="font-size:15px;color:#555;margin-top:30px">Kind regards, <a href="https://www.signable.co.uk" style="color:#555;">Signable</a></p>
                                <hr style="background:#FFF;color:#FFF;border:none;height:0;border-bottom:1px dotted #CCC;" />
                            </td>
                        </tr>
                    </table>
                  </td>
              </tr>
          </table>
          </body>
        branding_email_content_plain: |
          A document previously sent to you has been cancelled

          {company name} has cancelled the {contract title} document.

          Kind regards,
          Signable

          https://www.signable.co.uk
        branding_email_updated: "2025-07-02T11:44:32+0000"

    BrandingEmailPutContentResponseExample:
      summary: Updated branding email content response
      value:
        http: 200
        message: "email-cancelled email has been updated."
        branding_email_type: email-cancelled
        branding_email_subject: "{company name} has cancelled a test document"
        branding_email_content: |
          <body style="font-family:Arial,Helvetica,serif;">
          <table style="background:#FFF;font-family:Arial,Helvetica,sans-serif;border-collpase:collapse;width:600px;margin:0 auto;">
              <tr>
                  <td>
                      <table style="border-collpase:collapse">
                          <tr>
                              <td style="padding:15px 10px 10px">
                                  <a href="https://www.signable.co.uk" style="font-size:25px;color:#FFF;letter-spacing:-1px;font-weight:normal">
                                      <img src="{company logo}" alt="{company name}" style="border:0;" />
                                  </a>
                              </td>
                          </tr>
                          <tr>
                              <td style="padding-top:10px">
                                  <h1 style="font-size:15px;font-weight:normal;color:#444">A document previously sent to you has been cancelled</h1>
                                  <p style="font-size:13px;color:#444;line-height:18px;padding-top:10px">
                                    <span style="font-weight:bold;">{company name}</span> has cancelled the <span style="font-weight:bold;">{contract title}</span> document.
                                  </p>
                                  <p style="font-size:15px;color:#555;margin-top:30px">
                                    Kind regards, <a href="https://www.signable.co.uk" style="color:#555;">Signable</a>
                                  </p>
                                  <hr style="background:#FFF;color:#FFF;border:none;height:0;border-bottom:1px dotted #CCC;" />
                              </td>
                          </tr>
                      </table>
                  </td>
              </tr>
          </table>
          </body>
        branding_email_content_plain: |
          A document previously sent to you has been cancelled

          {company name} has cancelled the {contract title} document.

          Kind regards,
          Signable

          https://www.signable.co.uk
        branding_email_updated: "2025-07-02T13:29:07+0000"

    BrandingEmailPutPlainContentResponseExample:
      summary: Updated branding email plain content response
      value:
        http: 200
        message: "email-cancelled email has been updated."
        branding_email_type: email-cancelled
        branding_email_subject: "{company name} has cancelled a test document"
        branding_email_content: |
          <body style="font-family:Arial,Helvetica,serif;">
          <table style="background:#FFF;font-family:Arial,Helvetica,sans-serif;border-collpase:collapse;width:600px;margin:0 auto;">
              <tr>
                  <td>
                      <table style="border-collpase:collapse">
                          <tr>
                              <td style="padding:15px 10px 10px">
                                  <a href="https://www.signable.co.uk" style="font-size:25px;color:#FFF;letter-spacing:-1px;font-weight:normal">
                                      <img src="{company logo}" alt="{company name}" style="border:0;" />
                                  </a>
                              </td>
                          </tr>
                          <tr>
                              <td style="padding-top:10px">
                                  <h1 style="font-size:15px;font-weight:normal;color:#444">A document previously sent to you has been cancelled</h1>
                                  <p style="font-size:13px;color:#444;line-height:18px;padding-top:10px">
                                      <span style="font-weight:bold;">{company name}</span> has cancelled the <span style="font-weight:bold;">{contract title}</span> document.
                                  </p>
                                  <p style="font-size:15px;color:#555;margin-top:30px">
                                      Kind regards, <a href="https://www.signable.co.uk" style="color:#555;" title="Come and visit us">Signable</a>
                                  </p>
                                  <hr style="background:#FFF;color:#FFF;border:none;height:0;border-bottom:1px dotted #CCC;" />
                              </td>
                          </tr>
                      </table>
                  </td>
              </tr>
          </table>
          </body>
        branding_email_content_plain: |
          A test document previously sent to you has been cancelled

          {company name} has cancelled the {contract title} document.

          Kind regards,
          Signable

          https://www.signable.co.uk
        branding_email_updated: "2025-07-02T13:40:25+0000"

    SettingsResponseExample:
      summary: Example company settings response
      value:
        http: 200
        setting_signature_more_info: true
        setting_signature_format_accepted: typed,drawn,upload
        setting_signature_format_default: typed
        setting_email_pdf_attach: true
        setting_email_envelope_open: true
        setting_email_main_email: true
        setting_email_return_address_user: true
        setting_signing_consumer_regulations_act: false
        setting_signing_tooltips: false
        setting_signing_questions: true
        setting_pdf_audit_trail_hide: true
        setting_all_at_once_default: false

    SettingsPutRequestExample:
      summary: Example of an update company settings request payload
      value:
        setting_signature_more_info: true
        setting_signature_format_accepted: typed,drawn,upload
        setting_signature_format_default: typed
        setting_email_pdf_attach: true
        setting_email_envelope_open: true
        setting_email_main_email: true
        setting_email_return_address_user: true
        setting_signing_consumer_regulations_act: false
        setting_signing_tooltips: false
        setting_signing_questions: true
        setting_pdf_audit_trail_hide: true
        setting_all_at_once_default: false

    SettingsPutResponseExample:
      summary: A successful update of company settings
      value:
        http: 200
        message: Signable Ltd settings have been updated.
        href: https://api.signable.co.uk/v1/companies/32275
        company_id: "32275"
        company_name: Signable Ltd
        setting_signature_more_info: true
        setting_signature_format_accepted: typed,drawn,upload
        setting_signature_format_default: typed
        setting_email_pdf_attach: true
        setting_email_envelope_open: true
        setting_email_main_email: true
        setting_email_return_address_user: true
        setting_signing_consumer_regulations_act: false
        setting_signing_tooltips: true
        setting_signing_questions: false
        setting_pdf_audit_trail_hide: true
        setting_all_at_once_default: false

    WebhookRequestExample:
      summary: Example of a webhook request payload
      value:
        webhook_url: https://example.com/webhook
        webhook_type: send-envelope

    WebhookPostResponseExample:
      summary: Example response after creating a webhook
      value:
        http: 200
        message: The webhook (https://example.com) has been created
        href: https://api.signable.co.uk/v1/webhooks/152691
        webhook_id: "152691"
        webhook_url: https://example.com
        webhook_type: all
        webhook_created: 2025-06-23T17:15:01+0000

    WebhookPutResponseExample:
      summary: Example response from updating a webhook
      value:
        http: 200
        message: The webhook with ID 152691 has been updated
        href: https://api.signable.co.uk/v1/webhooks/152691
        webhook_id: 152691
        webhook_url: https://andy-example.com
        webhook_type: all
        webhook_updated: 2025-06-24T09:32:55+0000

    WebhookGetResponseExample:
      summary: Example of a single webhook fetched by ID
      value:
        http: 200
        webhook_id: 152691
        webhook_url: https://example.com
        webhook_type: all
        webhook_created: 2025-06-23T17:15:01+0000
        webhook_updated: null
        webhook_suspended: null

    WebhookListResponseExample:
      summary: Paginated list of webhooks
      value:
        http: 200
        offset: 10
        limit: 10
        total_webhooks: "44"
        next: https://api.signable.co.uk/v1/webhooks?offset=10&limit=10
        webhooks:
          - webhook_id: "132223"
            webhook_url: https://mylovelyendpointfortesting.free.beeceptor.com
            webhook_type: all
            webhook_created: 2019-01-29T18:22:05+0000
            webhook_suspended: 2024-07-11T12:21:12+0000
            webhook_updated: 2024-07-11T12:21:12+0000
          - webhook_id: "133097"
            webhook_url: https://webhook.site/e9f2c61c-98ec-4277-bef8-cf6bca506583
            webhook_type: send-envelope
            webhook_created: 2019-07-29T14:20:40+0000
            webhook_suspended: 2024-07-11T12:10:22+0000
            webhook_updated: 2024-07-11T12:10:22+0000
          - webhook_id: "133203"
            webhook_url: https://webhook.site/1b225ac0-703d-4d91-ab35-751034157ace
            webhook_type: cancelled-envelope
            webhook_created: 2019-08-22T08:38:35+0000
            webhook_suspended: 2024-07-17T08:48:02+0000
            webhook_updated: 2024-07-17T08:48:02+0000

    WebhookDeleteResponseExample:
      summary: Example response after deleting a webhook
      value:
        http: 200
        message: The webhook (https://andy-example.com) has been removed from your 
          account.
        webhook_id: 152691
        webhook_url: https://andy-example.com
        webhook_type: all

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: >
        Authenticate using HTTP Basic Authentication.
        Use your API key as the username and the password can be anything. For ease 
        of use we recommend "x".
